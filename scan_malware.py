import os
import zipfile
import yara

# Define los directorios
malware_folder = '/home/osboxes/malware_samples/'
rules_file = '/home/osboxes/yara_rules/rules-compiled'

# Cargar las reglas YARA compiladas
rules = yara.load(rules_file)

# Función para descomprimir los archivos .zip
def extract_zip(zip_path, extract_to):
    try:
        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            zip_ref.extractall(path=extract_to, pwd=b'infected')
        print(f'Archivo descomprimido con éxito: {zip_path}')
    except RuntimeError:
        print(f'Error al descomprimir {zip_path} - Contraseña incorrecta.')
    except Exception as e:
        print(f'Ocurrió un error al intentar descomprimir {zip_path}: {str(e)}')

# Función para escanear los archivos con las reglas YARA
def scan_malware_with_yara(extracted_folder):
    for root, dirs, files in os.walk(extracted_folder):
        for file in files:
            file_path = os.path.join(root, file)
            try:
                matches = rules.match(file_path)
#	 	if matches:
#                	print(f'[MATCH]   {file_path}: {[m.rule for m in matches]}')
#       else:
#                print(f'[NO MATCH] {file_path}')
                if matches:
                    print(f'Match encontrado en {file_path}: {matches}')
            except Exception as e:
                print(f'Error al analizar {file_path}: {str(e)}')

# Recorre todos los archivos .zip en la carpeta malware_samples
for zip_file in os.listdir(malware_folder):
    if zip_file.endswith('.zip'):
        zip_path = os.path.join(malware_folder, zip_file)
        extracted_path = os.path.join(malware_folder, zip_file[:-4])  # Creará una carpeta con el nombre del archivo sin .zip

        # Asegúrate de que la carpeta para los archivos extraídos exista
        if not os.path.exists(extracted_path):
            os.mkdir(extracted_path)

        # Descomprimir el archivo .zip
        extract_zip(zip_path, extracted_path)

        # Escanear los archivos descomprimidos
        scan_malware_with_yara(extracted_path)

